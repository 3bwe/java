/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author theblackdevil
 */
public class ConfigCreator extends javax.swing.JFrame {

    /**
     * Creates new form ConfigCreator
     */
    public ConfigCreator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DBConfigPanel = new javax.swing.JPanel();
        DomainNameLabel = new javax.swing.JLabel();
        DataBaseNameLabel = new javax.swing.JLabel();
        UserNameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        DomainNameInput = new javax.swing.JTextField();
        DataBaseInput = new javax.swing.JTextField();
        UserNameInput = new javax.swing.JTextField();
        CreateConfigButton = new javax.swing.JButton();
        PasswordInput = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DB Config Creator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        DomainNameLabel.setText("Domain Name");

        DataBaseNameLabel.setText("Database Name");

        UserNameLabel.setText("User Name");

        PasswordLabel.setText("Password");

        DomainNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DomainNameInputActionPerformed(evt);
            }
        });

        DataBaseInput.setToolTipText("");
        DataBaseInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataBaseEvent(evt);
            }
        });

        CreateConfigButton.setText("Create DB Config");
        CreateConfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateConfigButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DBConfigPanelLayout = new javax.swing.GroupLayout(DBConfigPanel);
        DBConfigPanel.setLayout(DBConfigPanelLayout);
        DBConfigPanelLayout.setHorizontalGroup(
            DBConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DBConfigPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(DBConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(DataBaseNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DomainNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UserNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PasswordLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(71, 71, 71)
                .addGroup(DBConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DataBaseInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(DomainNameInput)
                    .addComponent(UserNameInput)
                    .addComponent(PasswordInput))
                .addGap(109, 109, 109))
            .addGroup(DBConfigPanelLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(CreateConfigButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DBConfigPanelLayout.setVerticalGroup(
            DBConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DBConfigPanelLayout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(DBConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DomainNameLabel)
                    .addComponent(DomainNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(DBConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DataBaseNameLabel)
                    .addComponent(DataBaseInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(DBConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserNameLabel)
                    .addComponent(UserNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(DBConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordLabel)
                    .addComponent(PasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CreateConfigButton)
                .addContainerGap())
        );

        DomainNameInput.getAccessibleContext().setAccessibleName("DomainNameText");
        DomainNameInput.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DBConfigPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DBConfigPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName("DB Config Creator");
        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateConfigButtonActionPerformed
        this.DomainName = getDomainName();
        this.DataBaseName = getDataBaseName();
        this.UserName = getUserName();
        this.Password = getPassword();
        if (!this.DomainName.isEmpty()
                && !this.DataBaseName.isEmpty()
                && !this.UserName.isEmpty()
                && !this.Password.isEmpty()) {
            writeConfig();
            JOptionPane.showMessageDialog(rootPane, "Thanks for using Our DB Config Creator");
            System.exit(0);
        } else {
            JOptionPane.showMessageDialog(rootPane, "One of the fields is empty, please insert all info and continue");
        }
    }//GEN-LAST:event_CreateConfigButtonActionPerformed

    private void DataBaseEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataBaseEvent
        // TODO add your handling code here:
    }//GEN-LAST:event_DataBaseEvent

    private void DomainNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DomainNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DomainNameInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ConfigCreator().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateConfigButton;
    private javax.swing.JPanel DBConfigPanel;
    private javax.swing.JTextField DataBaseInput;
    private javax.swing.JLabel DataBaseNameLabel;
    private javax.swing.JTextField DomainNameInput;
    private javax.swing.JLabel DomainNameLabel;
    private javax.swing.JPasswordField PasswordInput;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JTextField UserNameInput;
    private javax.swing.JLabel UserNameLabel;
    // End of variables declaration//GEN-END:variables
    private String DomainName;/*domain name eg:localhost*/
    private String DataBaseName;/*database name eg:db*/
    private String UserName;/*username eg: user,root*/
    private String Password;/*password*/

    private String getDomainName() {/*to get domain name from user's input*/
        return DomainNameInput.getText();
    }

    private String getDataBaseName() {/*to get database name from user input*/
        return DataBaseInput.getText();
    }

    private String getUserName() {/*to get username from user's input*/
        return UserNameInput.getText();
    }

    private String getPassword() {/*to get password from user's input*/
        return PasswordInput.getText();
    }

    private void writeConfig() {/*to write config to the file*/
        File configFile = new File("database.conf");
        try {
            PrintWriter confWriter = new PrintWriter(configFile);
            confWriter.println(this.DomainName);
            confWriter.println(this.DataBaseName);
            confWriter.println(this.UserName);
            confWriter.println(this.Password);
            confWriter.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ConfigCreator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
